{
  "name": "@story-teller/server-app",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "env": "env $(cat $ENV_FILE | sed '/^#/ d')",
    "infrastructure:up": "npm run env -- docker-compose -p $ENV_FILE up -d",
    "infrastructure:ready": "npm run env -- until docker-compose -p $ENV_FILE exec db pg_isready -U postgres",
    "infrastructure:down": "npm run env -- docker-compose -p $ENV_FILE down",
    "infrastructure:implode": "npm run infrastructure:down -- -v",
    "infrastructure:reset": "npm run infrastructure:implode && npm run infrastructure:up && npm run db:migrate:up",
    "db:build:queries": "PGPORT=25432 PGDATABASE=compup_test PGUSER=compup PGPASSWORD=password  ./node_modules/.bin/pgtyped -c pgtyped.config.json",
    "db:migrate:create": "npm run env -- db-migrate create",
    "db:migrate:up": "npm run env -- db-migrate up && npm run db:build:queries",
    "db:migrate:down": "npm run env -- db-migrate down",
    "db:migrate:redo": "npm run db:migrate:down && npm run db:migrate:up",
    "db:migrate:reset": "npm run env -- db-migrate reset",
    "start": "npm run infrastructure:up && npm run env -- ts-node-dev --notify=0 --respawn ./src/index.ts",
    "lint": "eslint --ext js,ts --ignore-path .gitignore .",
    "test": "ENV_FILE=.env.test npm run env -- mocha --timeout 1000 -r regenerator-runtime/runtime.js -r @swc-node/register --exit --extension ts $(find src -name '*.spec.ts')",
    "tsc": "tsc"
  },
  "pre-commit": [
    "lint"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@swc-node/register": "^1.0.1",
    "@types/amqplib": "^0.5.15",
    "@types/bcrypt": "^3.0.0",
    "@types/body-parser": "^1.19.0",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.8",
    "@types/deep-equal": "^1.0.1",
    "@types/deep-freeze": "^0.1.2",
    "@types/express": "^4.17.8",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/nodemailer": "^6.4.0",
    "@types/pg": "^7.14.5",
    "@types/pg-query-stream": "^1.0.3",
    "@types/uuid": "^8.3.0",
    "amqplib": "^0.6.0",
    "bcrypt": "^5.0.0",
    "body-parser": "^1.19.0",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "deep-equal": "^2.0.4",
    "deep-freeze": "0.0.1",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "fp-ts": "^2.8.5",
    "hamjest": "^3.7.1",
    "js-joda": "^1.10.1",
    "jsonwebtoken": "^8.5.1",
    "monocle-ts": "^2.3.3",
    "nodemailer": "^6.4.14",
    "pg": "^8.4.2",
    "pg-camelcase": "0.0.3",
    "pg-native": "^3.0.0",
    "pg-query-stream": "^3.3.2",
    "snake-case": "^3.0.3",
    "space-lift": "^0.8.7",
    "sql-template-strings": "^2.2.2",
    "sql-template-tag": "^4.0.0",
    "ts-node": "^9.0.0",
    "uuid": "^8.3.1"
  },
  "devDependencies": {
    "@pgtyped/cli": "^0.8.2",
    "@story-teller/shared": "*",
    "@types/expect": "^1.20.4",
    "@types/mocha": "^8.0.3",
    "@types/mockdate": "^2.0.0",
    "@typescript-eslint/eslint-plugin": "^4.6.0",
    "@typescript-eslint/parser": "^4.6.0",
    "db-migrate": "^0.11.11",
    "db-migrate-pg": "^1.2.2",
    "eslint": "^7.12.1",
    "eslint-config-standard-with-typescript": "^19.0.1",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.2",
    "factory.ts": "^0.5.1",
    "mocha": "^8.2.0",
    "mockdate": "^3.0.2",
    "pre-commit": "^1.2.2",
    "regenerator-runtime": "^0.13.7",
    "schemats": "^3.0.3",
    "standard": "^16.0.0",
    "ts-node-dev": "^1.0.0",
    "ts-sinon": "^2.0.1",
    "typescript": "^4.0.5"
  }
}
